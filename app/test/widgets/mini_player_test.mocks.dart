// Mocks generated by Mockito 5.4.6 from annotations
// in from_fed_to_chain_app/test/widgets/mini_player_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:from_fed_to_chain_app/models/audio_file.dart' as _i5;
import 'package:from_fed_to_chain_app/services/audio_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AudioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioService extends _i1.Mock implements _i2.AudioService {
  MockAudioService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PlaybackState get playbackState => (super.noSuchMethod(
        Invocation.getter(#playbackState),
        returnValue: _i2.PlaybackState.stopped,
      ) as _i2.PlaybackState);

  @override
  Duration get currentPosition => (super.noSuchMethod(
        Invocation.getter(#currentPosition),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#currentPosition),
        ),
      ) as Duration);

  @override
  Duration get totalDuration => (super.noSuchMethod(
        Invocation.getter(#totalDuration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#totalDuration),
        ),
      ) as Duration);

  @override
  double get playbackSpeed => (super.noSuchMethod(
        Invocation.getter(#playbackSpeed),
        returnValue: 0.0,
      ) as double);

  @override
  bool get autoplayEnabled => (super.noSuchMethod(
        Invocation.getter(#autoplayEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get repeatEnabled => (super.noSuchMethod(
        Invocation.getter(#repeatEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get isPlaying => (super.noSuchMethod(
        Invocation.getter(#isPlaying),
        returnValue: false,
      ) as bool);

  @override
  bool get isPaused => (super.noSuchMethod(
        Invocation.getter(#isPaused),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get isIdle => (super.noSuchMethod(
        Invocation.getter(#isIdle),
        returnValue: false,
      ) as bool);

  @override
  double get progress => (super.noSuchMethod(
        Invocation.getter(#progress),
        returnValue: 0.0,
      ) as double);

  @override
  String get formattedCurrentPosition => (super.noSuchMethod(
        Invocation.getter(#formattedCurrentPosition),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#formattedCurrentPosition),
        ),
      ) as String);

  @override
  String get formattedTotalDuration => (super.noSuchMethod(
        Invocation.getter(#formattedTotalDuration),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#formattedTotalDuration),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> playAudio(_i5.AudioFile? audioFile) => (super.noSuchMethod(
        Invocation.method(
          #playAudio,
          [audioFile],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void setAutoplayEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setAutoplayEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRepeatEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setRepeatEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> togglePlayPause() => (super.noSuchMethod(
        Invocation.method(
          #togglePlayPause,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipToNextEpisode() => (super.noSuchMethod(
        Invocation.method(
          #skipToNextEpisode,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipToPreviousEpisode() => (super.noSuchMethod(
        Invocation.method(
          #skipToPreviousEpisode,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> seekTo(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seekTo,
          [position],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipForward() => (super.noSuchMethod(
        Invocation.method(
          #skipForward,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipBackward() => (super.noSuchMethod(
        Invocation.method(
          #skipBackward,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setPlaybackSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #setPlaybackSpeed,
          [speed],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> testMediaSession() => (super.noSuchMethod(
        Invocation.method(
          #testMediaSession,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipToNext() => (super.noSuchMethod(
        Invocation.method(
          #skipToNext,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> skipToPrevious() => (super.noSuchMethod(
        Invocation.method(
          #skipToPrevious,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> seekForward() => (super.noSuchMethod(
        Invocation.method(
          #seekForward,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> seekBackward() => (super.noSuchMethod(
        Invocation.method(
          #seekBackward,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> play(_i5.AudioFile? audioFile) => (super.noSuchMethod(
        Invocation.method(
          #play,
          [audioFile],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void toggleAutoplay() => super.noSuchMethod(
        Invocation.method(
          #toggleAutoplay,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleRepeat() => super.noSuchMethod(
        Invocation.method(
          #toggleRepeat,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enableAutoplay(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #enableAutoplay,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> onEpisodeCompleted() => (super.noSuchMethod(
        Invocation.method(
          #onEpisodeCompleted,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void updateProgress(Duration? position) => super.noSuchMethod(
        Invocation.method(
          #updateProgress,
          [position],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handlePlaybackError(String? message) => super.noSuchMethod(
        Invocation.method(
          #handlePlaybackError,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleNetworkTimeout() => super.noSuchMethod(
        Invocation.method(
          #handleNetworkTimeout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleInvalidUrl(_i5.AudioFile? audioFile) => super.noSuchMethod(
        Invocation.method(
          #handleInvalidUrl,
          [audioFile],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isValidAudioFile(_i5.AudioFile? audioFile) => (super.noSuchMethod(
        Invocation.method(
          #isValidAudioFile,
          [audioFile],
        ),
        returnValue: false,
      ) as bool);

  @override
  void savePlaybackState() => super.noSuchMethod(
        Invocation.method(
          #savePlaybackState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> restorePlaybackPosition(_i5.AudioFile? audioFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorePlaybackPosition,
          [audioFile],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPlaybackStateForTesting(_i2.PlaybackState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #setPlaybackStateForTesting,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCurrentAudioFileForTesting(_i5.AudioFile? audioFile) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentAudioFileForTesting,
          [audioFile],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDurationForTesting(Duration? duration) => super.noSuchMethod(
        Invocation.method(
          #setDurationForTesting,
          [duration],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPositionForTesting(Duration? position) => super.noSuchMethod(
        Invocation.method(
          #setPositionForTesting,
          [position],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForTesting(String? error) => super.noSuchMethod(
        Invocation.method(
          #setErrorForTesting,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
