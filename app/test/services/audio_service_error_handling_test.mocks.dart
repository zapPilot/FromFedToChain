// Mocks generated by Mockito 5.4.6 from annotations
// in from_fed_to_chain_app/test/services/audio_service_error_handling_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i11;

import 'package:audio_service/audio_service.dart' as _i6;
import 'package:audio_session/audio_session.dart' as _i12;
import 'package:from_fed_to_chain_app/models/audio_content.dart' as _i10;
import 'package:from_fed_to_chain_app/models/audio_file.dart' as _i5;
import 'package:from_fed_to_chain_app/services/background_audio_handler.dart'
    as _i4;
import 'package:from_fed_to_chain_app/services/content_service.dart' as _i8;
import 'package:just_audio/just_audio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubject_1<T> extends _i1.SmartFake
    implements _i2.BehaviorSubject<T> {
  _FakeBehaviorSubject_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublishSubject_2<T> extends _i1.SmartFake
    implements _i2.PublishSubject<T> {
  _FakePublishSubject_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_3<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlaybackEvent_4 extends _i1.SmartFake implements _i3.PlaybackEvent {
  _FakePlaybackEvent_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlayerState_5 extends _i1.SmartFake implements _i3.PlayerState {
  _FakePlayerState_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BackgroundAudioHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackgroundAudioHandler extends _i1.Mock
    implements _i4.BackgroundAudioHandler {
  @override
  Duration get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
      ) as Duration);

  @override
  set onSkipToNextEpisode(
          dynamic Function(_i5.AudioFile)? _onSkipToNextEpisode) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSkipToNextEpisode,
          _onSkipToNextEpisode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onSkipToPreviousEpisode(
          dynamic Function(_i5.AudioFile)? _onSkipToPreviousEpisode) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSkipToPreviousEpisode,
          _onSkipToPreviousEpisode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i6.PlaybackState> get playbackState =>
      (super.noSuchMethod(
        Invocation.getter(#playbackState),
        returnValue: _FakeBehaviorSubject_1<_i6.PlaybackState>(
          this,
          Invocation.getter(#playbackState),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<_i6.PlaybackState>(
          this,
          Invocation.getter(#playbackState),
        ),
      ) as _i2.BehaviorSubject<_i6.PlaybackState>);

  @override
  _i2.BehaviorSubject<List<_i6.MediaItem>> get queue => (super.noSuchMethod(
        Invocation.getter(#queue),
        returnValue: _FakeBehaviorSubject_1<List<_i6.MediaItem>>(
          this,
          Invocation.getter(#queue),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<List<_i6.MediaItem>>(
          this,
          Invocation.getter(#queue),
        ),
      ) as _i2.BehaviorSubject<List<_i6.MediaItem>>);

  @override
  _i2.BehaviorSubject<String> get queueTitle => (super.noSuchMethod(
        Invocation.getter(#queueTitle),
        returnValue: _FakeBehaviorSubject_1<String>(
          this,
          Invocation.getter(#queueTitle),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<String>(
          this,
          Invocation.getter(#queueTitle),
        ),
      ) as _i2.BehaviorSubject<String>);

  @override
  _i2.BehaviorSubject<_i6.MediaItem?> get mediaItem => (super.noSuchMethod(
        Invocation.getter(#mediaItem),
        returnValue: _FakeBehaviorSubject_1<_i6.MediaItem?>(
          this,
          Invocation.getter(#mediaItem),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<_i6.MediaItem?>(
          this,
          Invocation.getter(#mediaItem),
        ),
      ) as _i2.BehaviorSubject<_i6.MediaItem?>);

  @override
  _i2.BehaviorSubject<_i6.AndroidPlaybackInfo> get androidPlaybackInfo =>
      (super.noSuchMethod(
        Invocation.getter(#androidPlaybackInfo),
        returnValue: _FakeBehaviorSubject_1<_i6.AndroidPlaybackInfo>(
          this,
          Invocation.getter(#androidPlaybackInfo),
        ),
        returnValueForMissingStub:
            _FakeBehaviorSubject_1<_i6.AndroidPlaybackInfo>(
          this,
          Invocation.getter(#androidPlaybackInfo),
        ),
      ) as _i2.BehaviorSubject<_i6.AndroidPlaybackInfo>);

  @override
  _i2.BehaviorSubject<_i6.RatingStyle> get ratingStyle => (super.noSuchMethod(
        Invocation.getter(#ratingStyle),
        returnValue: _FakeBehaviorSubject_1<_i6.RatingStyle>(
          this,
          Invocation.getter(#ratingStyle),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<_i6.RatingStyle>(
          this,
          Invocation.getter(#ratingStyle),
        ),
      ) as _i2.BehaviorSubject<_i6.RatingStyle>);

  @override
  _i2.PublishSubject<dynamic> get customEvent => (super.noSuchMethod(
        Invocation.getter(#customEvent),
        returnValue: _FakePublishSubject_2<dynamic>(
          this,
          Invocation.getter(#customEvent),
        ),
        returnValueForMissingStub: _FakePublishSubject_2<dynamic>(
          this,
          Invocation.getter(#customEvent),
        ),
      ) as _i2.PublishSubject<dynamic>);

  @override
  _i2.BehaviorSubject<dynamic> get customState => (super.noSuchMethod(
        Invocation.getter(#customState),
        returnValue: _FakeBehaviorSubject_1<dynamic>(
          this,
          Invocation.getter(#customState),
        ),
        returnValueForMissingStub: _FakeBehaviorSubject_1<dynamic>(
          this,
          Invocation.getter(#customState),
        ),
      ) as _i2.BehaviorSubject<dynamic>);

  @override
  void setEpisodeNavigationCallbacks({
    required dynamic Function(_i5.AudioFile)? onNext,
    required dynamic Function(_i5.AudioFile)? onPrevious,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setEpisodeNavigationCallbacks,
          [],
          {
            #onNext: onNext,
            #onPrevious: onPrevious,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> setAudioSource(
    String? url, {
    required String? title,
    String? artist,
    Duration? initialPosition,
    _i5.AudioFile? audioFile,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioSource,
          [url],
          {
            #title: title,
            #artist: artist,
            #initialPosition: initialPosition,
            #audioFile: audioFile,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> play() => (super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seek(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> skipToNext() => (super.noSuchMethod(
        Invocation.method(
          #skipToNext,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> skipToPrevious() => (super.noSuchMethod(
        Invocation.method(
          #skipToPrevious,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> fastForward() => (super.noSuchMethod(
        Invocation.method(
          #fastForward,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> rewind() => (super.noSuchMethod(
        Invocation.method(
          #rewind,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<dynamic> customAction(
    String? name, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customAction,
          [
            name,
            extras,
          ],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<void> testMediaSession() => (super.noSuchMethod(
        Invocation.method(
          #testMediaSession,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onTaskRemoved() => (super.noSuchMethod(
        Invocation.method(
          #onTaskRemoved,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> prepare() => (super.noSuchMethod(
        Invocation.method(
          #prepare,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> prepareFromMediaId(
    String? mediaId, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromMediaId,
          [
            mediaId,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> prepareFromSearch(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromSearch,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> prepareFromUri(
    Uri? uri, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromUri,
          [
            uri,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> playFromMediaId(
    String? mediaId, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromMediaId,
          [
            mediaId,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> playFromSearch(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromSearch,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> playFromUri(
    Uri? uri, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromUri,
          [
            uri,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> playMediaItem(_i6.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #playMediaItem,
          [mediaItem],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> click([_i6.MediaButton? button = _i6.MediaButton.media]) =>
      (super.noSuchMethod(
        Invocation.method(
          #click,
          [button],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addQueueItem(_i6.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQueueItem,
          [mediaItem],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addQueueItems(List<_i6.MediaItem>? mediaItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQueueItems,
          [mediaItems],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> insertQueueItem(
    int? index,
    _i6.MediaItem? mediaItem,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertQueueItem,
          [
            index,
            mediaItem,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateQueue(List<_i6.MediaItem>? queue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQueue,
          [queue],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateMediaItem(_i6.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMediaItem,
          [mediaItem],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeQueueItem(_i6.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeQueueItem,
          [mediaItem],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeQueueItemAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #removeQueueItemAt,
          [index],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> skipToQueueItem(int? index) => (super.noSuchMethod(
        Invocation.method(
          #skipToQueueItem,
          [index],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setRating(
    _i6.Rating? rating, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRating,
          [
            rating,
            extras,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCaptioningEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setCaptioningEnabled,
          [enabled],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setRepeatMode(_i6.AudioServiceRepeatMode? repeatMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRepeatMode,
          [repeatMode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setShuffleMode(_i6.AudioServiceShuffleMode? shuffleMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setShuffleMode,
          [shuffleMode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seekBackward(bool? begin) => (super.noSuchMethod(
        Invocation.method(
          #seekBackward,
          [begin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seekForward(bool? begin) => (super.noSuchMethod(
        Invocation.method(
          #seekForward,
          [begin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #setSpeed,
          [speed],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onNotificationDeleted() => (super.noSuchMethod(
        Invocation.method(
          #onNotificationDeleted,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i6.MediaItem>> getChildren(
    String? parentMediaId, [
    Map<String, dynamic>? options,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChildren,
          [
            parentMediaId,
            options,
          ],
        ),
        returnValue: _i7.Future<List<_i6.MediaItem>>.value(<_i6.MediaItem>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i6.MediaItem>>.value(<_i6.MediaItem>[]),
      ) as _i7.Future<List<_i6.MediaItem>>);

  @override
  _i2.ValueStream<Map<String, dynamic>> subscribeToChildren(
          String? parentMediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToChildren,
          [parentMediaId],
        ),
        returnValue: _FakeValueStream_3<Map<String, dynamic>>(
          this,
          Invocation.method(
            #subscribeToChildren,
            [parentMediaId],
          ),
        ),
        returnValueForMissingStub: _FakeValueStream_3<Map<String, dynamic>>(
          this,
          Invocation.method(
            #subscribeToChildren,
            [parentMediaId],
          ),
        ),
      ) as _i2.ValueStream<Map<String, dynamic>>);

  @override
  _i7.Future<_i6.MediaItem?> getMediaItem(String? mediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaItem,
          [mediaId],
        ),
        returnValue: _i7.Future<_i6.MediaItem?>.value(),
        returnValueForMissingStub: _i7.Future<_i6.MediaItem?>.value(),
      ) as _i7.Future<_i6.MediaItem?>);

  @override
  _i7.Future<List<_i6.MediaItem>> search(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i7.Future<List<_i6.MediaItem>>.value(<_i6.MediaItem>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i6.MediaItem>>.value(<_i6.MediaItem>[]),
      ) as _i7.Future<List<_i6.MediaItem>>);

  @override
  _i7.Future<void> androidAdjustRemoteVolume(
          _i6.AndroidVolumeDirection? direction) =>
      (super.noSuchMethod(
        Invocation.method(
          #androidAdjustRemoteVolume,
          [direction],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> androidSetRemoteVolume(int? volumeIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #androidSetRemoteVolume,
          [volumeIndex],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ContentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContentService extends _i1.Mock implements _i8.ContentService {
  @override
  List<_i5.AudioFile> get allEpisodes => (super.noSuchMethod(
        Invocation.getter(#allEpisodes),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  List<_i5.AudioFile> get filteredEpisodes => (super.noSuchMethod(
        Invocation.getter(#filteredEpisodes),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  String get selectedLanguage => (super.noSuchMethod(
        Invocation.getter(#selectedLanguage),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#selectedLanguage),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#selectedLanguage),
        ),
      ) as String);

  @override
  String get selectedCategory => (super.noSuchMethod(
        Invocation.getter(#selectedCategory),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#selectedCategory),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#selectedCategory),
        ),
      ) as String);

  @override
  String get searchQuery => (super.noSuchMethod(
        Invocation.getter(#searchQuery),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#searchQuery),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#searchQuery),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get sortOrder => (super.noSuchMethod(
        Invocation.getter(#sortOrder),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#sortOrder),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#sortOrder),
        ),
      ) as String);

  @override
  Map<String, DateTime> get listenHistory => (super.noSuchMethod(
        Invocation.getter(#listenHistory),
        returnValue: <String, DateTime>{},
        returnValueForMissingStub: <String, DateTime>{},
      ) as Map<String, DateTime>);

  @override
  bool get hasEpisodes => (super.noSuchMethod(
        Invocation.getter(#hasEpisodes),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasFilteredResults => (super.noSuchMethod(
        Invocation.getter(#hasFilteredResults),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i5.AudioFile> getListenHistoryEpisodes({int? limit = 50}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListenHistoryEpisodes,
          [],
          {#limit: limit},
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  double getEpisodeCompletion(String? episodeId) => (super.noSuchMethod(
        Invocation.method(
          #getEpisodeCompletion,
          [episodeId],
        ),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool isEpisodeFinished(String? episodeId) => (super.noSuchMethod(
        Invocation.method(
          #isEpisodeFinished,
          [episodeId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isEpisodeUnfinished(String? episodeId) => (super.noSuchMethod(
        Invocation.method(
          #isEpisodeUnfinished,
          [episodeId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<void> addToListenHistory(
    _i5.AudioFile? episode, {
    DateTime? at,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToListenHistory,
          [episode],
          {#at: at},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeFromListenHistory(String? episodeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromListenHistory,
          [episodeId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearListenHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearListenHistory,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i10.AudioContent?> fetchContentById(
    String? id,
    String? language,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchContentById,
          [
            id,
            language,
            category,
          ],
        ),
        returnValue: _i7.Future<_i10.AudioContent?>.value(),
        returnValueForMissingStub: _i7.Future<_i10.AudioContent?>.value(),
      ) as _i7.Future<_i10.AudioContent?>);

  @override
  _i7.Future<_i10.AudioContent?> getContentForAudioFile(
          _i5.AudioFile? audioFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentForAudioFile,
          [audioFile],
        ),
        returnValue: _i7.Future<_i10.AudioContent?>.value(),
        returnValueForMissingStub: _i7.Future<_i10.AudioContent?>.value(),
      ) as _i7.Future<_i10.AudioContent?>);

  @override
  _i10.AudioContent? getCachedContent(
    String? id,
    String? language,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedContent,
          [
            id,
            language,
            category,
          ],
        ),
        returnValueForMissingStub: null,
      ) as _i10.AudioContent?);

  @override
  _i7.Future<_i5.AudioFile?> getAudioFileById(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudioFileById,
          [contentId],
        ),
        returnValue: _i7.Future<_i5.AudioFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i5.AudioFile?>.value(),
      ) as _i7.Future<_i5.AudioFile?>);

  @override
  _i7.Future<void> prefetchContent(List<_i5.AudioFile>? audioFiles) =>
      (super.noSuchMethod(
        Invocation.method(
          #prefetchContent,
          [audioFiles],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void clearContentCache() => super.noSuchMethod(
        Invocation.method(
          #clearContentCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> updateEpisodeCompletion(
    String? episodeId,
    double? completion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEpisodeCompletion,
          [
            episodeId,
            completion,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> markEpisodeAsFinished(String? episodeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markEpisodeAsFinished,
          [episodeId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i5.AudioFile> getUnfinishedEpisodes() => (super.noSuchMethod(
        Invocation.method(
          #getUnfinishedEpisodes,
          [],
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  _i7.Future<void> setSortOrder(String? sortOrder) => (super.noSuchMethod(
        Invocation.method(
          #setSortOrder,
          [sortOrder],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadAllEpisodes() => (super.noSuchMethod(
        Invocation.method(
          #loadAllEpisodes,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadEpisodesForLanguage(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadEpisodesForLanguage,
          [language],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCategory(String? category) => (super.noSuchMethod(
        Invocation.method(
          #setCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setSearchQuery(String? query) => super.noSuchMethod(
        Invocation.method(
          #setSearchQuery,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void createPlaylistFromFiltered(String? name) => super.noSuchMethod(
        Invocation.method(
          #createPlaylistFromFiltered,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void createPlaylist(
    String? name,
    List<_i5.AudioFile>? episodes,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #createPlaylist,
          [
            name,
            episodes,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addToCurrentPlaylist(_i5.AudioFile? episode) => super.noSuchMethod(
        Invocation.method(
          #addToCurrentPlaylist,
          [episode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromCurrentPlaylist(_i5.AudioFile? episode) => super.noSuchMethod(
        Invocation.method(
          #removeFromCurrentPlaylist,
          [episode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.AudioFile? getNextEpisode(_i5.AudioFile? currentEpisode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNextEpisode,
          [currentEpisode],
        ),
        returnValueForMissingStub: null,
      ) as _i5.AudioFile?);

  @override
  _i5.AudioFile? getPreviousEpisode(_i5.AudioFile? currentEpisode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreviousEpisode,
          [currentEpisode],
        ),
        returnValueForMissingStub: null,
      ) as _i5.AudioFile?);

  @override
  List<_i5.AudioFile> getEpisodesByLanguage(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEpisodesByLanguage,
          [language],
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  List<_i5.AudioFile> getEpisodesByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEpisodesByCategory,
          [category],
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  List<_i5.AudioFile> getEpisodesByLanguageAndCategory(
    String? language,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEpisodesByLanguageAndCategory,
          [
            language,
            category,
          ],
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  Map<String, dynamic> getStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getStatistics,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i7.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<List<_i5.AudioFile>> searchEpisodes(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchEpisodes,
          [query],
        ),
        returnValue: _i7.Future<List<_i5.AudioFile>>.value(<_i5.AudioFile>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i5.AudioFile>>.value(<_i5.AudioFile>[]),
      ) as _i7.Future<List<_i5.AudioFile>>);

  @override
  Map<String, dynamic> getDebugInfo(_i5.AudioFile? audioFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDebugInfo,
          [audioFile],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i7.Future<void> setEpisodeCompletion(
    String? episodeId,
    double? completion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEpisodeCompletion,
          [
            episodeId,
            completion,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void clearCurrentPlaylist() => super.noSuchMethod(
        Invocation.method(
          #clearCurrentPlaylist,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cacheContent(
    String? id,
    String? language,
    String? category,
    _i10.AudioContent? content,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #cacheContent,
          [
            id,
            language,
            category,
            content,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.AudioFile> getFilteredEpisodes() => (super.noSuchMethod(
        Invocation.method(
          #getFilteredEpisodes,
          [],
        ),
        returnValue: <_i5.AudioFile>[],
        returnValueForMissingStub: <_i5.AudioFile>[],
      ) as List<_i5.AudioFile>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEpisodesForTesting(List<_i5.AudioFile>? episodes) =>
      super.noSuchMethod(
        Invocation.method(
          #setEpisodesForTesting,
          [episodes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoadingForTesting(bool? loading) => super.noSuchMethod(
        Invocation.method(
          #setLoadingForTesting,
          [loading],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForTesting(String? error) => super.noSuchMethod(
        Invocation.method(
          #setErrorForTesting,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSelectedLanguage(String? language) => super.noSuchMethod(
        Invocation.method(
          #setSelectedLanguage,
          [language],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSelectedCategory(String? category) => super.noSuchMethod(
        Invocation.method(
          #setSelectedCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i3.AudioPlayer {
  @override
  _i3.PlaybackEvent get playbackEvent => (super.noSuchMethod(
        Invocation.getter(#playbackEvent),
        returnValue: _FakePlaybackEvent_4(
          this,
          Invocation.getter(#playbackEvent),
        ),
        returnValueForMissingStub: _FakePlaybackEvent_4(
          this,
          Invocation.getter(#playbackEvent),
        ),
      ) as _i3.PlaybackEvent);

  @override
  _i7.Stream<_i3.PlaybackEvent> get playbackEventStream => (super.noSuchMethod(
        Invocation.getter(#playbackEventStream),
        returnValue: _i7.Stream<_i3.PlaybackEvent>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.PlaybackEvent>.empty(),
      ) as _i7.Stream<_i3.PlaybackEvent>);

  @override
  _i7.Stream<Duration?> get durationStream => (super.noSuchMethod(
        Invocation.getter(#durationStream),
        returnValue: _i7.Stream<Duration?>.empty(),
        returnValueForMissingStub: _i7.Stream<Duration?>.empty(),
      ) as _i7.Stream<Duration?>);

  @override
  _i3.ProcessingState get processingState => (super.noSuchMethod(
        Invocation.getter(#processingState),
        returnValue: _i3.ProcessingState.idle,
        returnValueForMissingStub: _i3.ProcessingState.idle,
      ) as _i3.ProcessingState);

  @override
  _i7.Stream<_i3.ProcessingState> get processingStateStream =>
      (super.noSuchMethod(
        Invocation.getter(#processingStateStream),
        returnValue: _i7.Stream<_i3.ProcessingState>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.ProcessingState>.empty(),
      ) as _i7.Stream<_i3.ProcessingState>);

  @override
  bool get playing => (super.noSuchMethod(
        Invocation.getter(#playing),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<bool> get playingStream => (super.noSuchMethod(
        Invocation.getter(#playingStream),
        returnValue: _i7.Stream<bool>.empty(),
        returnValueForMissingStub: _i7.Stream<bool>.empty(),
      ) as _i7.Stream<bool>);

  @override
  double get volume => (super.noSuchMethod(
        Invocation.getter(#volume),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.Stream<double> get volumeStream => (super.noSuchMethod(
        Invocation.getter(#volumeStream),
        returnValue: _i7.Stream<double>.empty(),
        returnValueForMissingStub: _i7.Stream<double>.empty(),
      ) as _i7.Stream<double>);

  @override
  double get speed => (super.noSuchMethod(
        Invocation.getter(#speed),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.Stream<double> get speedStream => (super.noSuchMethod(
        Invocation.getter(#speedStream),
        returnValue: _i7.Stream<double>.empty(),
        returnValueForMissingStub: _i7.Stream<double>.empty(),
      ) as _i7.Stream<double>);

  @override
  double get pitch => (super.noSuchMethod(
        Invocation.getter(#pitch),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i7.Stream<double> get pitchStream => (super.noSuchMethod(
        Invocation.getter(#pitchStream),
        returnValue: _i7.Stream<double>.empty(),
        returnValueForMissingStub: _i7.Stream<double>.empty(),
      ) as _i7.Stream<double>);

  @override
  bool get skipSilenceEnabled => (super.noSuchMethod(
        Invocation.getter(#skipSilenceEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<bool> get skipSilenceEnabledStream => (super.noSuchMethod(
        Invocation.getter(#skipSilenceEnabledStream),
        returnValue: _i7.Stream<bool>.empty(),
        returnValueForMissingStub: _i7.Stream<bool>.empty(),
      ) as _i7.Stream<bool>);

  @override
  Duration get bufferedPosition => (super.noSuchMethod(
        Invocation.getter(#bufferedPosition),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#bufferedPosition),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#bufferedPosition),
        ),
      ) as Duration);

  @override
  _i7.Stream<Duration> get bufferedPositionStream => (super.noSuchMethod(
        Invocation.getter(#bufferedPositionStream),
        returnValue: _i7.Stream<Duration>.empty(),
        returnValueForMissingStub: _i7.Stream<Duration>.empty(),
      ) as _i7.Stream<Duration>);

  @override
  _i7.Stream<_i3.IcyMetadata?> get icyMetadataStream => (super.noSuchMethod(
        Invocation.getter(#icyMetadataStream),
        returnValue: _i7.Stream<_i3.IcyMetadata?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.IcyMetadata?>.empty(),
      ) as _i7.Stream<_i3.IcyMetadata?>);

  @override
  _i3.PlayerState get playerState => (super.noSuchMethod(
        Invocation.getter(#playerState),
        returnValue: _FakePlayerState_5(
          this,
          Invocation.getter(#playerState),
        ),
        returnValueForMissingStub: _FakePlayerState_5(
          this,
          Invocation.getter(#playerState),
        ),
      ) as _i3.PlayerState);

  @override
  _i7.Stream<_i3.PlayerState> get playerStateStream => (super.noSuchMethod(
        Invocation.getter(#playerStateStream),
        returnValue: _i7.Stream<_i3.PlayerState>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.PlayerState>.empty(),
      ) as _i7.Stream<_i3.PlayerState>);

  @override
  _i7.Stream<List<_i3.IndexedAudioSource>?> get sequenceStream =>
      (super.noSuchMethod(
        Invocation.getter(#sequenceStream),
        returnValue: _i7.Stream<List<_i3.IndexedAudioSource>?>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<_i3.IndexedAudioSource>?>.empty(),
      ) as _i7.Stream<List<_i3.IndexedAudioSource>?>);

  @override
  _i7.Stream<List<int>?> get shuffleIndicesStream => (super.noSuchMethod(
        Invocation.getter(#shuffleIndicesStream),
        returnValue: _i7.Stream<List<int>?>.empty(),
        returnValueForMissingStub: _i7.Stream<List<int>?>.empty(),
      ) as _i7.Stream<List<int>?>);

  @override
  _i7.Stream<int?> get currentIndexStream => (super.noSuchMethod(
        Invocation.getter(#currentIndexStream),
        returnValue: _i7.Stream<int?>.empty(),
        returnValueForMissingStub: _i7.Stream<int?>.empty(),
      ) as _i7.Stream<int?>);

  @override
  _i7.Stream<_i3.SequenceState?> get sequenceStateStream => (super.noSuchMethod(
        Invocation.getter(#sequenceStateStream),
        returnValue: _i7.Stream<_i3.SequenceState?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.SequenceState?>.empty(),
      ) as _i7.Stream<_i3.SequenceState?>);

  @override
  bool get hasNext => (super.noSuchMethod(
        Invocation.getter(#hasNext),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasPrevious => (super.noSuchMethod(
        Invocation.getter(#hasPrevious),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i3.LoopMode get loopMode => (super.noSuchMethod(
        Invocation.getter(#loopMode),
        returnValue: _i3.LoopMode.off,
        returnValueForMissingStub: _i3.LoopMode.off,
      ) as _i3.LoopMode);

  @override
  _i7.Stream<_i3.LoopMode> get loopModeStream => (super.noSuchMethod(
        Invocation.getter(#loopModeStream),
        returnValue: _i7.Stream<_i3.LoopMode>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.LoopMode>.empty(),
      ) as _i7.Stream<_i3.LoopMode>);

  @override
  bool get shuffleModeEnabled => (super.noSuchMethod(
        Invocation.getter(#shuffleModeEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<bool> get shuffleModeEnabledStream => (super.noSuchMethod(
        Invocation.getter(#shuffleModeEnabledStream),
        returnValue: _i7.Stream<bool>.empty(),
        returnValueForMissingStub: _i7.Stream<bool>.empty(),
      ) as _i7.Stream<bool>);

  @override
  _i7.Stream<int?> get androidAudioSessionIdStream => (super.noSuchMethod(
        Invocation.getter(#androidAudioSessionIdStream),
        returnValue: _i7.Stream<int?>.empty(),
        returnValueForMissingStub: _i7.Stream<int?>.empty(),
      ) as _i7.Stream<int?>);

  @override
  _i7.Stream<_i3.PositionDiscontinuity> get positionDiscontinuityStream =>
      (super.noSuchMethod(
        Invocation.getter(#positionDiscontinuityStream),
        returnValue: _i7.Stream<_i3.PositionDiscontinuity>.empty(),
        returnValueForMissingStub:
            _i7.Stream<_i3.PositionDiscontinuity>.empty(),
      ) as _i7.Stream<_i3.PositionDiscontinuity>);

  @override
  bool get automaticallyWaitsToMinimizeStalling => (super.noSuchMethod(
        Invocation.getter(#automaticallyWaitsToMinimizeStalling),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get canUseNetworkResourcesForLiveStreamingWhilePaused =>
      (super.noSuchMethod(
        Invocation.getter(#canUseNetworkResourcesForLiveStreamingWhilePaused),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  double get preferredPeakBitRate => (super.noSuchMethod(
        Invocation.getter(#preferredPeakBitRate),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool get allowsExternalPlayback => (super.noSuchMethod(
        Invocation.getter(#allowsExternalPlayback),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get webSinkId => (super.noSuchMethod(
        Invocation.getter(#webSinkId),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#webSinkId),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#webSinkId),
        ),
      ) as String);

  @override
  Duration get position => (super.noSuchMethod(
        Invocation.getter(#position),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#position),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#position),
        ),
      ) as Duration);

  @override
  _i7.Stream<Duration> get positionStream => (super.noSuchMethod(
        Invocation.getter(#positionStream),
        returnValue: _i7.Stream<Duration>.empty(),
        returnValueForMissingStub: _i7.Stream<Duration>.empty(),
      ) as _i7.Stream<Duration>);

  @override
  _i7.Stream<Duration> createPositionStream({
    int? steps = 800,
    Duration? minPeriod = const Duration(milliseconds: 200),
    Duration? maxPeriod = const Duration(milliseconds: 200),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPositionStream,
          [],
          {
            #steps: steps,
            #minPeriod: minPeriod,
            #maxPeriod: maxPeriod,
          },
        ),
        returnValue: _i7.Stream<Duration>.empty(),
        returnValueForMissingStub: _i7.Stream<Duration>.empty(),
      ) as _i7.Stream<Duration>);

  @override
  _i7.Future<Duration?> setUrl(
    String? url, {
    Map<String, String>? headers,
    Duration? initialPosition,
    bool? preload = true,
    dynamic tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUrl,
          [url],
          {
            #headers: headers,
            #initialPosition: initialPosition,
            #preload: preload,
            #tag: tag,
          },
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> setFilePath(
    String? filePath, {
    Duration? initialPosition,
    bool? preload = true,
    dynamic tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilePath,
          [filePath],
          {
            #initialPosition: initialPosition,
            #preload: preload,
            #tag: tag,
          },
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> setAsset(
    String? assetPath, {
    String? package,
    bool? preload = true,
    Duration? initialPosition,
    dynamic tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAsset,
          [assetPath],
          {
            #package: package,
            #preload: preload,
            #initialPosition: initialPosition,
            #tag: tag,
          },
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> setAudioSource(
    _i3.AudioSource? source, {
    bool? preload = true,
    int? initialIndex,
    Duration? initialPosition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioSource,
          [source],
          {
            #preload: preload,
            #initialIndex: initialIndex,
            #initialPosition: initialPosition,
          },
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<Duration?> setClip({
    Duration? start,
    Duration? end,
    dynamic tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setClip,
          [],
          {
            #start: start,
            #end: end,
            #tag: tag,
          },
        ),
        returnValue: _i7.Future<Duration?>.value(),
        returnValueForMissingStub: _i7.Future<Duration?>.value(),
      ) as _i7.Future<Duration?>);

  @override
  _i7.Future<void> play() => (super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSkipSilenceEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setSkipSilenceEnabled,
          [enabled],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #setSpeed,
          [speed],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLoopMode(_i3.LoopMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setLoopMode,
          [mode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setShuffleModeEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setShuffleModeEnabled,
          [enabled],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> shuffle() => (super.noSuchMethod(
        Invocation.method(
          #shuffle,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setAutomaticallyWaitsToMinimizeStalling(
          bool? automaticallyWaitsToMinimizeStalling) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAutomaticallyWaitsToMinimizeStalling,
          [automaticallyWaitsToMinimizeStalling],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCanUseNetworkResourcesForLiveStreamingWhilePaused(
          bool? canUseNetworkResourcesForLiveStreamingWhilePaused) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCanUseNetworkResourcesForLiveStreamingWhilePaused,
          [canUseNetworkResourcesForLiveStreamingWhilePaused],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPreferredPeakBitRate(double? preferredPeakBitRate) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPreferredPeakBitRate,
          [preferredPeakBitRate],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setAllowsExternalPlayback(bool? allowsExternalPlayback) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAllowsExternalPlayback,
          [allowsExternalPlayback],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seek(
    Duration? position, {
    int? index,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seekToNext() => (super.noSuchMethod(
        Invocation.method(
          #seekToNext,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> seekToPrevious() => (super.noSuchMethod(
        Invocation.method(
          #seekToPrevious,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setAndroidAudioAttributes(
          _i12.AndroidAudioAttributes? audioAttributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAndroidAudioAttributes,
          [audioAttributes],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setWebCrossOrigin(_i3.WebCrossOrigin? webCrossOrigin) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWebCrossOrigin,
          [webCrossOrigin],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setWebSinkId(String? webSinkId) => (super.noSuchMethod(
        Invocation.method(
          #setWebSinkId,
          [webSinkId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
