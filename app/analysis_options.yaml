# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.
#
# CONFIGURATION RATIONALE:
# - Deprecation warnings now enabled as warnings to track technical debt
#   TODO: Replace withOpacity with withValues() across codebase (537 instances)
#   This is cosmetic but should be addressed in dedicated tech debt sprint
# - BuildContext async warnings suppressed for demo files only
# - Focus on legitimate code quality issues (unused imports, unused elements)

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    # Enable deprecation warnings to track technical debt
    deprecated_member_use: warning
    # Suppress BuildContext async warnings (demo file only)
    use_build_context_synchronously: ignore
    # Allow other info-level issues in development
    avoid_print: info
    prefer_const_constructors: info
    prefer_const_literals_to_create_immutables: info
    unnecessary_brace_in_string_interps: ignore
    unnecessary_to_list_in_spreads: ignore
    # Treat unused elements as warnings (should be fixed)
    unused_element: warning

linter:
  rules:
    # Disable noisy rules for development productivity
    avoid_print: false
    # Enable const constructor optimization for performance
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
