// Mocks generated by Mockito 5.4.6 from annotations
// in from_fed_to_chain_audio/test/services/audio_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i10;

import 'package:audio_service/audio_service.dart' as _i5;
import 'package:from_fed_to_chain_audio/models/audio_content.dart' as _i8;
import 'package:from_fed_to_chain_audio/models/audio_file.dart' as _i4;
import 'package:from_fed_to_chain_audio/services/background_audio_handler.dart'
    as _i3;
import 'package:from_fed_to_chain_audio/services/content_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBehaviorSubject_1<T> extends _i1.SmartFake
    implements _i2.BehaviorSubject<T> {
  _FakeBehaviorSubject_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublishSubject_2<T> extends _i1.SmartFake
    implements _i2.PublishSubject<T> {
  _FakePublishSubject_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_3<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BackgroundAudioHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackgroundAudioHandler extends _i1.Mock
    implements _i3.BackgroundAudioHandler {
  MockBackgroundAudioHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isPlaying => (super.noSuchMethod(
        Invocation.getter(#isPlaying),
        returnValue: false,
      ) as bool);

  @override
  bool get isPaused => (super.noSuchMethod(
        Invocation.getter(#isPaused),
        returnValue: false,
      ) as bool);

  @override
  Duration get position => (super.noSuchMethod(
        Invocation.getter(#position),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#position),
        ),
      ) as Duration);

  @override
  Duration get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
      ) as Duration);

  @override
  double get speed => (super.noSuchMethod(
        Invocation.getter(#speed),
        returnValue: 0.0,
      ) as double);

  @override
  set onSkipToNextEpisode(
          dynamic Function(_i4.AudioFile)? _onSkipToNextEpisode) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSkipToNextEpisode,
          _onSkipToNextEpisode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onSkipToPreviousEpisode(
          dynamic Function(_i4.AudioFile)? _onSkipToPreviousEpisode) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSkipToPreviousEpisode,
          _onSkipToPreviousEpisode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.BehaviorSubject<_i5.PlaybackState> get playbackState =>
      (super.noSuchMethod(
        Invocation.getter(#playbackState),
        returnValue: _FakeBehaviorSubject_1<_i5.PlaybackState>(
          this,
          Invocation.getter(#playbackState),
        ),
      ) as _i2.BehaviorSubject<_i5.PlaybackState>);

  @override
  _i2.BehaviorSubject<List<_i5.MediaItem>> get queue => (super.noSuchMethod(
        Invocation.getter(#queue),
        returnValue: _FakeBehaviorSubject_1<List<_i5.MediaItem>>(
          this,
          Invocation.getter(#queue),
        ),
      ) as _i2.BehaviorSubject<List<_i5.MediaItem>>);

  @override
  _i2.BehaviorSubject<String> get queueTitle => (super.noSuchMethod(
        Invocation.getter(#queueTitle),
        returnValue: _FakeBehaviorSubject_1<String>(
          this,
          Invocation.getter(#queueTitle),
        ),
      ) as _i2.BehaviorSubject<String>);

  @override
  _i2.BehaviorSubject<_i5.MediaItem?> get mediaItem => (super.noSuchMethod(
        Invocation.getter(#mediaItem),
        returnValue: _FakeBehaviorSubject_1<_i5.MediaItem?>(
          this,
          Invocation.getter(#mediaItem),
        ),
      ) as _i2.BehaviorSubject<_i5.MediaItem?>);

  @override
  _i2.BehaviorSubject<_i5.AndroidPlaybackInfo> get androidPlaybackInfo =>
      (super.noSuchMethod(
        Invocation.getter(#androidPlaybackInfo),
        returnValue: _FakeBehaviorSubject_1<_i5.AndroidPlaybackInfo>(
          this,
          Invocation.getter(#androidPlaybackInfo),
        ),
      ) as _i2.BehaviorSubject<_i5.AndroidPlaybackInfo>);

  @override
  _i2.BehaviorSubject<_i5.RatingStyle> get ratingStyle => (super.noSuchMethod(
        Invocation.getter(#ratingStyle),
        returnValue: _FakeBehaviorSubject_1<_i5.RatingStyle>(
          this,
          Invocation.getter(#ratingStyle),
        ),
      ) as _i2.BehaviorSubject<_i5.RatingStyle>);

  @override
  _i2.PublishSubject<dynamic> get customEvent => (super.noSuchMethod(
        Invocation.getter(#customEvent),
        returnValue: _FakePublishSubject_2<dynamic>(
          this,
          Invocation.getter(#customEvent),
        ),
      ) as _i2.PublishSubject<dynamic>);

  @override
  _i2.BehaviorSubject<dynamic> get customState => (super.noSuchMethod(
        Invocation.getter(#customState),
        returnValue: _FakeBehaviorSubject_1<dynamic>(
          this,
          Invocation.getter(#customState),
        ),
      ) as _i2.BehaviorSubject<dynamic>);

  @override
  _i6.Future<void> play() => (super.noSuchMethod(
        Invocation.method(
          #play,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> seek(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> skipToNext() => (super.noSuchMethod(
        Invocation.method(
          #skipToNext,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> skipToPrevious() => (super.noSuchMethod(
        Invocation.method(
          #skipToPrevious,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setAudioSource(
    String? url, {
    String? title,
    String? artist,
    Duration? initialPosition,
    _i4.AudioFile? audioFile,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioSource,
          [url],
          {
            #title: title,
            #artist: artist,
            #initialPosition: initialPosition,
            #audioFile: audioFile,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void setEpisodeNavigationCallbacks({
    dynamic Function(_i4.AudioFile)? onNext,
    dynamic Function(_i4.AudioFile)? onPrevious,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setEpisodeNavigationCallbacks,
          [],
          {
            #onNext: onNext,
            #onPrevious: onPrevious,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> customAction(
    String? name, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customAction,
          [
            name,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onTaskRemoved() => (super.noSuchMethod(
        Invocation.method(
          #onTaskRemoved,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> onNotificationDeleted() => (super.noSuchMethod(
        Invocation.method(
          #onNotificationDeleted,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> prepare() => (super.noSuchMethod(
        Invocation.method(
          #prepare,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> prepareFromMediaId(
    String? mediaId, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromMediaId,
          [
            mediaId,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> prepareFromSearch(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromSearch,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> prepareFromUri(
    Uri? uri, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareFromUri,
          [
            uri,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playFromMediaId(
    String? mediaId, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromMediaId,
          [
            mediaId,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playFromSearch(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromSearch,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playFromUri(
    Uri? uri, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #playFromUri,
          [
            uri,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playMediaItem(_i5.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #playMediaItem,
          [mediaItem],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> click([_i5.MediaButton? button = _i5.MediaButton.media]) =>
      (super.noSuchMethod(
        Invocation.method(
          #click,
          [button],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addQueueItem(_i5.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQueueItem,
          [mediaItem],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addQueueItems(List<_i5.MediaItem>? mediaItems) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQueueItems,
          [mediaItems],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> insertQueueItem(
    int? index,
    _i5.MediaItem? mediaItem,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertQueueItem,
          [
            index,
            mediaItem,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateQueue(List<_i5.MediaItem>? queue) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQueue,
          [queue],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateMediaItem(_i5.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMediaItem,
          [mediaItem],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeQueueItem(_i5.MediaItem? mediaItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeQueueItem,
          [mediaItem],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeQueueItemAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #removeQueueItemAt,
          [index],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fastForward() => (super.noSuchMethod(
        Invocation.method(
          #fastForward,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> rewind() => (super.noSuchMethod(
        Invocation.method(
          #rewind,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> skipToQueueItem(int? index) => (super.noSuchMethod(
        Invocation.method(
          #skipToQueueItem,
          [index],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setRating(
    _i5.Rating? rating, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRating,
          [
            rating,
            extras,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setCaptioningEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setCaptioningEnabled,
          [enabled],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setRepeatMode(_i5.AudioServiceRepeatMode? repeatMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRepeatMode,
          [repeatMode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setShuffleMode(_i5.AudioServiceShuffleMode? shuffleMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setShuffleMode,
          [shuffleMode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> seekBackward(bool? begin) => (super.noSuchMethod(
        Invocation.method(
          #seekBackward,
          [begin],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> seekForward(bool? begin) => (super.noSuchMethod(
        Invocation.method(
          #seekForward,
          [begin],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSpeed(double? speed) => (super.noSuchMethod(
        Invocation.method(
          #setSpeed,
          [speed],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i5.MediaItem>> getChildren(
    String? parentMediaId, [
    Map<String, dynamic>? options,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChildren,
          [
            parentMediaId,
            options,
          ],
        ),
        returnValue: _i6.Future<List<_i5.MediaItem>>.value(<_i5.MediaItem>[]),
      ) as _i6.Future<List<_i5.MediaItem>>);

  @override
  _i2.ValueStream<Map<String, dynamic>> subscribeToChildren(
          String? parentMediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToChildren,
          [parentMediaId],
        ),
        returnValue: _FakeValueStream_3<Map<String, dynamic>>(
          this,
          Invocation.method(
            #subscribeToChildren,
            [parentMediaId],
          ),
        ),
      ) as _i2.ValueStream<Map<String, dynamic>>);

  @override
  _i6.Future<_i5.MediaItem?> getMediaItem(String? mediaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMediaItem,
          [mediaId],
        ),
        returnValue: _i6.Future<_i5.MediaItem?>.value(),
      ) as _i6.Future<_i5.MediaItem?>);

  @override
  _i6.Future<List<_i5.MediaItem>> search(
    String? query, [
    Map<String, dynamic>? extras,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            query,
            extras,
          ],
        ),
        returnValue: _i6.Future<List<_i5.MediaItem>>.value(<_i5.MediaItem>[]),
      ) as _i6.Future<List<_i5.MediaItem>>);

  @override
  _i6.Future<void> androidAdjustRemoteVolume(
          _i5.AndroidVolumeDirection? direction) =>
      (super.noSuchMethod(
        Invocation.method(
          #androidAdjustRemoteVolume,
          [direction],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> androidSetRemoteVolume(int? volumeIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #androidSetRemoteVolume,
          [volumeIndex],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ContentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContentService extends _i1.Mock implements _i7.ContentService {
  MockContentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i8.AudioContent> get contents => (super.noSuchMethod(
        Invocation.getter(#contents),
        returnValue: <_i8.AudioContent>[],
      ) as List<_i8.AudioContent>);

  @override
  List<_i4.AudioFile> get audioFiles => (super.noSuchMethod(
        Invocation.getter(#audioFiles),
        returnValue: <_i4.AudioFile>[],
      ) as List<_i4.AudioFile>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  String get searchQuery => (super.noSuchMethod(
        Invocation.getter(#searchQuery),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#searchQuery),
        ),
      ) as String);

  @override
  List<String> get availableLanguages => (super.noSuchMethod(
        Invocation.getter(#availableLanguages),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get availableCategories => (super.noSuchMethod(
        Invocation.getter(#availableCategories),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<_i8.AudioContent> get contentsWithAudio => (super.noSuchMethod(
        Invocation.getter(#contentsWithAudio),
        returnValue: <_i8.AudioContent>[],
      ) as List<_i8.AudioContent>);

  @override
  bool get isUsingApiData => (super.noSuchMethod(
        Invocation.getter(#isUsingApiData),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> loadContent() => (super.noSuchMethod(
        Invocation.method(
          #loadContent,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void setLanguageFilter(String? language) => super.noSuchMethod(
        Invocation.method(
          #setLanguageFilter,
          [language],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCategoryFilter(String? category) => super.noSuchMethod(
        Invocation.method(
          #setCategoryFilter,
          [category],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSearchQuery(String? query) => super.noSuchMethod(
        Invocation.method(
          #setSearchQuery,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearFilters() => super.noSuchMethod(
        Invocation.method(
          #clearFilters,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.AudioContent? getContent(
    String? id,
    String? language,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getContent,
        [
          id,
          language,
        ],
      )) as _i8.AudioContent?);

  @override
  _i6.Future<_i8.AudioContent?> fetchContentById(
    String? id,
    String? language,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchContentById,
          [
            id,
            language,
            category,
          ],
        ),
        returnValue: _i6.Future<_i8.AudioContent?>.value(),
      ) as _i6.Future<_i8.AudioContent?>);

  @override
  _i6.Future<_i8.AudioContent?> getContentWithFetch(
    String? id,
    String? language,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentWithFetch,
          [
            id,
            language,
            category,
          ],
        ),
        returnValue: _i6.Future<_i8.AudioContent?>.value(),
      ) as _i6.Future<_i8.AudioContent?>);

  @override
  _i4.AudioFile? getAudioFile(
    String? id,
    String? language,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getAudioFile,
        [
          id,
          language,
        ],
      )) as _i4.AudioFile?);

  @override
  void setUseApiData(bool? useApi) => super.noSuchMethod(
        Invocation.method(
          #setUseApiData,
          [useApi],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<List<_i4.AudioFile>> getAudioFilesByLanguage(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudioFilesByLanguage,
          [language],
        ),
        returnValue: _i6.Future<List<_i4.AudioFile>>.value(<_i4.AudioFile>[]),
      ) as _i6.Future<List<_i4.AudioFile>>);

  @override
  _i4.AudioFile? getNextEpisode(_i4.AudioFile? currentEpisode) =>
      (super.noSuchMethod(Invocation.method(
        #getNextEpisode,
        [currentEpisode],
      )) as _i4.AudioFile?);

  @override
  _i4.AudioFile? getPreviousEpisode(_i4.AudioFile? currentEpisode) =>
      (super.noSuchMethod(Invocation.method(
        #getPreviousEpisode,
        [currentEpisode],
      )) as _i4.AudioFile?);

  @override
  List<_i4.AudioFile> getCurrentLanguageEpisodes() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLanguageEpisodes,
          [],
        ),
        returnValue: <_i4.AudioFile>[],
      ) as List<_i4.AudioFile>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
