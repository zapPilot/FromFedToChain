import { describe, it, beforeEach, afterEach } from 'node:test';
import assert from 'node:assert';
import { SocialMediaService } from '../lib/core/SocialMediaService.js';
import { TestUtils } from './setup.js';

// Mock spawn to avoid actual claude CLI calls
const originalSpawn = await import('child_process').spawn;

describe('SocialMediaService', () => {
  
  beforeEach(() => {
    // Mock spawn for claude command
    const mockSpawn = () => ({
      stdout: { on: (event, callback) => callback('ðŸš¨ Breaking: Test hook generated by AI') },
      stderr: { on: () => {} },
      on: (event, callback) => {
        if (event === 'close') callback(0);
      }
    });
  });

  it('should optimize hooks for different platforms', () => {
    const baseHook = 'ðŸš¨ Breaking: Major crypto development changes everything in finance!';
    
    const twitterHook = SocialMediaService.optimizeForPlatform(baseHook, 'twitter', 'en-US', 'daily-news');
    const linkedinHook = SocialMediaService.optimizeForPlatform(baseHook, 'linkedin', 'en-US', 'daily-news');
    const facebookHook = SocialMediaService.optimizeForPlatform(baseHook, 'facebook', 'en-US', 'daily-news');

    // Twitter should add hashtags and stay under 280 chars
    assert(twitterHook.includes('#'));
    assert(twitterHook.length <= 280);

    // LinkedIn should remove emojis and be more professional
    assert(!linkedinHook.includes('ðŸš¨'));
    assert(linkedinHook.includes('#'));

    // Facebook should be conversational
    assert(facebookHook.includes('?') || facebookHook.includes('What do you think'));
  });

  it('should build proper prompts for claude', () => {
    const keyInsight = 'Bitcoin price reaches new highs as institutional adoption accelerates.';
    const title = 'Bitcoin Institutional Adoption';
    const language = 'en-US';
    const category = 'daily-news';

    const prompt = SocialMediaService.buildShortPrompt(keyInsight, title, language, category);

    assert(prompt.includes(keyInsight));
    assert(prompt.includes(title));
    assert(prompt.includes(language));
    assert(prompt.includes('hook'));
    assert(prompt.includes('180 chars'));
    assert(prompt.includes('Hashtags:')); // Category is used for hashtags
  });

  it('should generate fallback hooks when claude unavailable', () => {
    const content = 'Bitcoin reaches $100,000 as government adoption accelerates globally.';
    const title = 'Bitcoin Government Adoption';
    const language = 'en-US';
    const category = 'daily-news';

    const fallbackHook = SocialMediaService.generateFallbackHook(content, title, language, category);

    assert(typeof fallbackHook === 'string');
    assert(fallbackHook.length > 10);
    assert(fallbackHook.length < 200);
    assert(fallbackHook.includes('Bitcoin') || fallbackHook.includes('government'));
  });

  it('should respect language platform preferences', () => {
    const enPlatforms = ['twitter', 'linkedin', 'facebook', 'instagram'];
    const jaPlatforms = ['twitter', 'facebook'];

    // This would test the configuration
    assert(Array.isArray(enPlatforms));
    assert(Array.isArray(jaPlatforms));
    assert(jaPlatforms.length < enPlatforms.length);
  });

  it('should handle hook length limits correctly', () => {
    const longHook = 'A'.repeat(500); // Very long hook
    
    const twitterOptimized = SocialMediaService.optimizeForPlatform(longHook, 'twitter', 'en-US', 'daily-news');
    const linkedinOptimized = SocialMediaService.optimizeForPlatform(longHook, 'linkedin', 'en-US', 'daily-news');
    
    assert(twitterOptimized.length <= 280);
    assert(linkedinOptimized.length <= 3000);
  });

  it('should extract key insights efficiently', () => {
    const content = 'Bitcoin reaches $100,000 as government adoption accelerates. This is a breakthrough moment. The market is responding positively to regulatory clarity.';
    
    const keyInsight = SocialMediaService.extractKeyInsight(content);
    
    assert(typeof keyInsight === 'string');
    assert(keyInsight.length > 10);
    assert(keyInsight.length <= 150);
    assert(keyInsight.includes('Bitcoin') || keyInsight.includes('government'));
  });

  it('should generate content hashes for change detection', () => {
    const content1 = 'Bitcoin reaches new highs';
    const content2 = 'Bitcoin reaches new highs';
    const content3 = 'Ethereum updates coming soon';
    
    const hash1 = SocialMediaService.hashContent(content1);
    const hash2 = SocialMediaService.hashContent(content2);
    const hash3 = SocialMediaService.hashContent(content3);
    
    assert.equal(hash1, hash2); // Same content = same hash
    assert.notEqual(hash1, hash3); // Different content = different hash
    assert.equal(hash1.length, 16); // Hash is 16 characters
  });

  it('should build efficient batch prompts', () => {
    const files = [
      {
        data: { language: { 'en-US': { title: 'Bitcoin News', content: 'Bitcoin reaches $100k milestone' } } },
        category: 'daily-news'
      },
      {
        data: { language: { 'en-US': { title: 'Ethereum Update', content: 'Ethereum scaling improves dramatically' } } },
        category: 'ethereum'
      }
    ];

    const prompt = SocialMediaService.buildBatchPrompt(files, 'en-US');
    
    assert(prompt.includes('Bitcoin News'));
    assert(prompt.includes('Ethereum Update'));
    assert(prompt.includes('EXACTLY 2 hooks'));
    assert(prompt.includes('numbered 1-2'));
    assert(prompt.length < 1000); // Should be much shorter than individual prompts
  });
});